// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DirectionForm should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DirectionForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        onSubmit={[Function]}
      >
        <label>
          Starting Location
        </label>
          
        <input
          name="source"
          onChange={[Function]}
          required={true}
          type="text"
          value=""
        />
        
        <br />
        <br />
        <label>
          Drop-off Location
        </label>
          
        <input
          name="destination"
          onChange={[Function]}
          required={true}
          type="text"
          value=""
        />
        
        <br />
        <br />
        
        <br />
        <input
          type="submit"
          value="Submit"
        />
          
        <input
          onClick={[Function]}
          type="reset"
        />
      </form>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <label>
            Starting Location
          </label>,
          "  ",
          <input
            name="source"
            onChange={[Function]}
            required={true}
            type="text"
            value=""
          />,
          "",
          <br />,
          <br />,
          <label>
            Drop-off Location
          </label>,
          "  ",
          <input
            name="destination"
            onChange={[Function]}
            required={true}
            type="text"
            value=""
          />,
          "",
          <br />,
          <br />,
          "",
          <br />,
          <input
            type="submit"
            value="Submit"
          />,
          "  ",
          <input
            onClick={[Function]}
            type="reset"
          />,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Starting Location",
          },
          "ref": null,
          "rendered": "Starting Location",
          "type": "label",
        },
        "  ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "name": "source",
            "onChange": [Function],
            "required": true,
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        "",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Drop-off Location",
          },
          "ref": null,
          "rendered": "Drop-off Location",
          "type": "label",
        },
        "  ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "name": "destination",
            "onChange": [Function],
            "required": true,
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        "",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        "",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "type": "submit",
            "value": "Submit",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        "  ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "onClick": [Function],
            "type": "reset",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          onSubmit={[Function]}
        >
          <label>
            Starting Location
          </label>
            
          <input
            name="source"
            onChange={[Function]}
            required={true}
            type="text"
            value=""
          />
          
          <br />
          <br />
          <label>
            Drop-off Location
          </label>
            
          <input
            name="destination"
            onChange={[Function]}
            required={true}
            type="text"
            value=""
          />
          
          <br />
          <br />
          
          <br />
          <input
            type="submit"
            value="Submit"
          />
            
          <input
            onClick={[Function]}
            type="reset"
          />
        </form>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label>
              Starting Location
            </label>,
            "  ",
            <input
              name="source"
              onChange={[Function]}
              required={true}
              type="text"
              value=""
            />,
            "",
            <br />,
            <br />,
            <label>
              Drop-off Location
            </label>,
            "  ",
            <input
              name="destination"
              onChange={[Function]}
              required={true}
              type="text"
              value=""
            />,
            "",
            <br />,
            <br />,
            "",
            <br />,
            <input
              type="submit"
              value="Submit"
            />,
            "  ",
            <input
              onClick={[Function]}
              type="reset"
            />,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Starting Location",
            },
            "ref": null,
            "rendered": "Starting Location",
            "type": "label",
          },
          "  ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "source",
              "onChange": [Function],
              "required": true,
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          "",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Drop-off Location",
            },
            "ref": null,
            "rendered": "Drop-off Location",
            "type": "label",
          },
          "  ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "destination",
              "onChange": [Function],
              "required": true,
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          "",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          "",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "type": "submit",
              "value": "Submit",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          "  ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "onClick": [Function],
              "type": "reset",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
